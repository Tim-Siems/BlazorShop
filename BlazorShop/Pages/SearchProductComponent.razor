@using eShop.CoreBusiness.Models
@using eShop.UseCases
@using eShop.DataStore
@using eShop.UseCases.SortProductScreen

@page "/Products" 
 
@inject ISearchProduct searchProduct
@inject ISortProductDesc sortProductDesc
@inject ISortProductAsc sortProductAsc

<h3>Search Products</h3>   
<br/>
<div><SearchBarComponent OnSearch="HandleSearch"></SearchBarComponent>
</div>
<br/>
<div>
<button type="button" class="btn btn-primary"  @onclick="HandleSortDescending"><i class="oi oi-sort-descending" color="#F55"></i></button>
<button type="button" class="btn btn-primary"  @onclick="HandleSortAscending"><i class="oi oi-sort-ascending" color="#F55"></i></button>
</div>
<br/>
<table class="table table-striped">
    <thead>
        <tr>
            <th>
                Name
           </th>
           <th>
               Brand
           </th>
           <th>
               Price
           </th>
        </tr>
    </thead>
    <tbody>
        @if (products != null && products.Count() > 0)
        {
            @foreach (var prod in products)
            {
                <ProductItemComponent Product="prod"></ProductItemComponent>
            }
        }
        else
        {
            <tr>
                <td colspan="3">
                    Cannot find products
                </td>
            </tr>
        }
    </tbody>
</table>


@code{
    private IEnumerable<Product> products;

    protected override void OnInitialized()
    {
        base.OnInitialized();

        products = searchProduct.Execute();
    }

    private void HandleSearch(string filter)
    {
        products = searchProduct.Execute(filter);
    }

    private void HandleSortDescending()
    {
        products = sortProductDesc.Execute();
    }

    private void HandleSortAscending()
    {
        products = sortProductAsc.Execute();
    }
}
    